name: 'Setup Groovy SDK'
description: 'Set up the wanted version of the Groovy SDK and 
              add CLI commands to the PATH. Relies on actions/setup-java and SDKMAN.'
author: 'SÃ©bastien Perpignane'

branding:
  icon: 'zap'
  color: 'red'

inputs:
  groovy-version:
    description: 'The Groovy SDK version to setup. If no version is specified, 
    the latest stable version will be selected automatically.'

  java-version:
    description: "Groovy needs a JRE. If you don't specify a java version, Groovy will run with the default JRE
    provided by the OS. If no JRE is available on the OS, Groovy won't work."
    required: false

  java-distribution:
    description: 'Java distribution. Default is temurin'
    required: false
    default: "temurin"

  cache:
    description: 'Cache management for dependencies'
    required: false
    default: ''

  target-script:
    description: "The script that will be run with Groovy"
    required: false
    default: Main.groovy

outputs:
  dependency-file-path:
    description: "Path of the generated file that lists the dependencies"
    value: ${{ steps.find-grape-deps.ouputs.dependency-file-path }}

runs:

    using: composite

    steps:
      - name: Install java specific version
        if: ${{ inputs.java-version != '' }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}

      - name: "Install SDKMAN"
        shell: bash
        run: |
          export SDKMAN_DIR="$HOME/.sdkman" && curl -s "https://get.sdkman.io?rcupdate=false" | bash
          echo "sdkman_dir=$SDKMAN_DIR" >> "$GITHUB_ENV"

      - name: Install Groovy SDK
        id: install_groovy
        shell: bash
        run: |
          if [[ "${{ inputs.groovy-version }}" != "" ]] && [[ ! "${{ inputs.groovy-version }}" =~ [0-9]+\.[0-9]+\.[0-9]+  ]]
          then
            echo "Invalid version"
            exit 1
          fi
          source ${{ env.sdkman_dir }}/bin/sdkman-init.sh
          sdk install groovy "${{ inputs.groovy-version }}"
          for candidate_dir in $(find "${{ env.sdkman_dir }}/candidates" -mindepth 1 -maxdepth 1 -type d); do
            echo "Setting $candidate_dir in PATH"
            echo "$candidate_dir/current/bin" >> $GITHUB_PATH
          done

      - name: Show Groovy information
        shell: bash
        run: |
          groovy -version
          
      - name: Cache management (Grape) - Find dependencies
        id: find-grape-deps
        if: ${{ inputs.cache == 'grape' }}
        shell: bash
        run: |
          grape_deps_script="${GITHUB_ACTION_PATH}/GrapeDependencies.groovy"
          echo "$(groovy $grape_deps_script "${{ inputs.target-script }}")" >> $GITHUB_OUTPUT

      - name: display output
        shell: bash
        run: |
          
          echo "find-grape-deps outputs:"
          echo ${{ join(steps.find-grape-deps.outputs.*, '\n') }}
          deps_file="${{ steps.find-grape-deps.outputs.dependency-file-path }}"
          echo "display file info"
          ls -al "$deps_file""
          echo "dependency file content:"
          cat "$deps_file"
          echo "hash-cache=${{ hashFiles( steps.find-grape-deps.outputs.dependency-file-path ) }}" >> "$GITHUB_ENV"
          
        
          
      - name: Cache management (Grape) - save cache
        if: ${{ inputs.cache == 'grape' }}
        uses: actions/cache/save@v3
        id: save-cache
        with:
          path: ~/.groovy/grapes/
          key: ${{ runner.os }}-${{ hashFiles( env.hash-cache ) }}

